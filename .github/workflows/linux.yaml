name: linux

on:
  push:
    tags:
      - "*.*.*"
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

jobs:
  linux-x64:
    name: linux-x64
    runs-on: ubuntu-22.04
    env:
      PACKAGE_NAME: libdartcv-linux-x64
    steps:
      - name: setup
        run: |
          sudo apt-get update

          sudo apt-get install -y curl unzip build-essential \
            libgtk-3-dev cmake ninja-build
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -p build && cd build
          cmake -S ${{ github.workspace }} \
            -DCMAKE_INSTALL_PREFIX=install \
            -DDARTCV_WITH_VIDEOIO=ON \
            -DDARTCV_ENABLE_INSTALL=ON \
            -DCMAKE_BUILD_TYPE=Release

          cmake --build . --config Release -j $(nproc) --target install
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
      - name: package
        run: |
          tar -C build/install -zcf ${{ env.PACKAGE_NAME }}.tar.gz .
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          files: |
            ${{ env.PACKAGE_NAME }}.tar.gz
  linux-arm64:
    name: linux-arm64
    runs-on: ubuntu-22.04
    env:
      PACKAGE_NAME: libdartcv-linux-arm64
    steps:
      - name: setup
        run: |
          sudo apt-get update

          sudo apt-get install g++-aarch64-linux-gnu
      - uses: actions/checkout@v4
      - name: build
        run: |
          mkdir -p build && cd build
          cmake -S ${{ github.workspace }} \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/cmake/aarch64-linux-gnu.toolchain.cmake \
            -DCMAKE_INSTALL_PREFIX=install \
            -DDARTCV_WITH_VIDEOIO=ON \
            -DDARTCV_ENABLE_INSTALL=ON \
            -DCMAKE_BUILD_TYPE=Release

          cmake --build . --config Release -j $(nproc) --target install
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: build/install
          name: ${{ env.PACKAGE_NAME }}
      - name: package
        run: |
          tar -C build/install -zcf ${{ env.PACKAGE_NAME }}.tar.gz .
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          files: |
            ${{ env.PACKAGE_NAME }}.tar.gz
